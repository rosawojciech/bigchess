% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tree_move.R
\name{tree_move}
\alias{tree_move}
\title{Compute a Move Tree}
\usage{
tree_move(df, move)
}
\arguments{
\item{df}{A data frame containing the 'Move' and 'Result' columns. This can
either be from the pgn function or an aggregated data frame from such df
(containing columns: Result, W1, B1, W2, ..., WN, BN, Freq).}

\item{move}{A character string indicating which move should be analyzed. For
example, "W1".}
}
\value{
A data frame containing 'White_score' (White's winning percentage),
'Draws_percent' (draw percentage), 'Black_score' (Black's winning
percentage), and 'N' (number of games). The data frame is sorted by the
power of the move (White_score * N), which describes the popularity and
score of the move, in descending order.
}
\description{
This function computes a tree for a given chess move, calculating the
frequencies and winning percentages.
}
\details{
The function takes a data frame with a 'Move' and 'Result' column,
where 'Move' represents a specific move in the game and 'Result' denotes
the game result ('1-0' for White win, '1/2-1/2' for draw, '0-1' for Black
win). The function aggregates the data to calculate the winning percentages
and frequencies for each move.
}
\examples{
f <- system.file("extdata", "Kasparov.gz", package = "bigchess")
con <- gzfile(f, encoding = "latin1")
df <- read.pgn(con, quiet = TRUE, stat.moves = FALSE)
# Analyze best responses to 1. e4 in Kasparov games (both white and black)
tree_move(subset(df,W1=="e4"),move = "B1")
# Analyze openings in aggregated data
tree_move(FirstTwoMoves,"W1")

}
